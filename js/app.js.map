{"version":3,"sources":["app/js/app.config.js","app/js/app.directives.js","app/js/app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CChfile":"build/js/app.js","sourcesContent":["(function (angular, undefined) {'use strict';\n\n//Define the application global configuration\nangular.module('kb.config', []).factory('config', [\n    function () {\n        // global application configuration\n        var defaultConfig = {\n        }\n\n\n        return defaultConfig;\n    }\n]);\n\n})(angular);","\n/*\n * create snorql directives\n */\n\nangular.module('kk.ui',[]) \n\n.directive(\"menuToggle\",[function() {\n\n    function link(scope, element, attrs) {\n      element.click(function () {\n        $('.row-offcanvas').toggleClass('active')\n        //$('html').toggleClass('overvlow-hidden')\n      });\n    }\n    \n    return {\n      link: link\n    };    \n}])\n\n.filter('clean', function () {\n   return function(input) {\n        if (!input) return \"\";\n        return  input.replace(/[\\.;-]/g, '');\n   };\n})\n\n.filter('reverse', function() {\n  return function(items) {\n    return items.slice().reverse();\n  };\n})","(function (angular, undefined) {'use strict';\n\nfunction Object_values(objects, f){\n  var r=[]\n  for(var key in objects) {\n      if(f)r.push(objects[key][f]);else r.push(objects[key]);\n  }\n  console.log(r,objects)\n  return r;\n}\n\n/**\n * create application recette and load deps\n */\nvar app = angular.module('karibou', [\n  'ngRoute','kb.config','kk.ui'\n])\n  .controller('AppCtrl',AppCtrl)\n  .config(appConfig)\n  .factory('errorInterceptor',errorInterceptor);\n\n\n//\n// implement application  \nAppCtrl.$inject=['$scope','$timeout','$location','$http','config','$log'];\nfunction AppCtrl($scope, $timeout, $location, $http, config, $log) {\n  $scope.recipes=[];\n  $scope.product={};\n  $scope.selected={idx:-1,product:{},labels:[]};\n\n  $scope.selectRecipe=function (idx) {\n    var sumBase=Object_values($scope.recipes[idx].base).reduce(function(p,c){return p+c},0)\n    $scope.selected.idx=idx\n    $scope.selected.labels=Object.keys($scope.recipes[idx].commande)\n    $scope.selected.recipe=$scope.recipes[idx];\n    $scope.selected.values={\n      sumBase:sumBase,\n      sumComm:0\n    }\n    $('.row-offcanvas').removeClass('active')\n    //.map(function(r){return r.title})\n  }\n\n  $scope.customField=function (name) {\n    return(name&&name.toLowerCase().indexOf('autre')!==-1)\n  }\n\n  $scope.computeSum=function(){\n    var sum=0;\n    if($scope.selected.idx===-1) return sum;\n    // sum of product\n    for (var p in $scope.selected.recipe.commande){\n      sum=sum+$scope.selected.recipe.commande[p]*($scope.product[p]||0)\n    }\n    $scope.selected.values.sumComm=sum;\n    $scope.selected.values.factor=sum/$scope.selected.values.sumBase\n\n    // values of base\n    for (var p in $scope.selected.recipe.base){\n      p=p.toLowerCase();\n      $scope.selected.values[p]=$scope.selected.recipe.base[p]*$scope.selected.values.factor\n    }\n    $scope.selected.values.litter=$scope.selected.values['eau']\n\n    console.log($scope.selected.values)\n    return sum\n  }\n\n  $http({method:'GET',url:'recettes.json'}).then(function(recettes){\n    $scope.recipes=recettes.data;\n  });\n\n\n\n};\n\n\n/**\n * ANGULAR BOOTSTRAP\n */\nappConfig.$inject=['$routeProvider','$locationProvider','$httpProvider'];\nfunction appConfig($routeProvider, $locationProvider, $httpProvider) {\n\n    // intercept errors\n    $httpProvider.interceptors.push('errorInterceptor')\n\n\n    // List of routes of the application\n    $routeProvider\n        .when('/', {title: 'welcome to snorql', templateUrl: 'partials/home.html'});\n\n\n    // Without serve side support html5 must be disabled.\n    $locationProvider.html5Mode(true);\n    //$locationProvider.hashPrefix = '!';\n};\n\nerrorInterceptor.$inject=['$q', '$rootScope', '$location'];\nfunction errorInterceptor($q, $rootScope, $location) {\n  return {\n      request: function (config) {\n          return config || $q.when(config);\n      },\n      requestError: function(request){\n          return $q.reject(request);\n      },\n      response: function (response) {\n          return response || $q.when(response);\n      },\n      responseError: function (response) {\n          if (response && response.status === 0) {\n            $rootScope.error=\"The API is not accessible\";\n          }\n          if (response && response.status === 401) {\n            $rootScope.error=\"You are not authorized to access the resource. Please login or review your privileges.\";\n          }\n          if (response && response.status === 404) {\n            $rootScope.error=\"URL not found\";\n          }\n          if (response && response.status >= 500) {\n            $rootScope.error=\"Request Failed\";\n          }\n          return $q.reject(response);\n      }\n  };\n};\n\n\n})(angular);"]}